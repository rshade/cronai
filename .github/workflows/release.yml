name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache: true

      - name: Install git-chglog
        run: go install github.com/git-chglog/git-chglog/cmd/git-chglog@latest

      - name: Make scripts executable
        run: chmod +x ./scripts/*.sh

      - name: Generate changelog
        run: |
          # Generate changelog for the current tag
          CURRENT_TAG=${GITHUB_REF#refs/tags/}
          make changelog FROM=$(git describe --tags --abbrev=0 $CURRENT_TAG^ 2>/dev/null || echo "") TO=$CURRENT_TAG

      - name: Extract changelog for current version
        id: changelog
        run: |
          # Extract the changelog section for the current version
          CURRENT_TAG=${GITHUB_REF#refs/tags/}
          
          # Read the changelog and extract the section for current version
          # This extracts from the version header to the next version header or end of file
          CHANGELOG=$(awk -v tag="$CURRENT_TAG" '
            /^## / && found { exit }
            /^## / && $2 == tag { found=1; next }
            found && /^## / { exit }
            found { print }
          ' CHANGELOG.md)
          
          # Save to file for GoReleaser
          echo "$CHANGELOG" > release-notes.md
          
          # Also set as output for debugging
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Run tests
        run: go test -race ./...

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: v2.9.0
          args: release --clean --release-notes=release-notes.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache: true

      - name: Install git-chglog
        run: go install github.com/git-chglog/git-chglog/cmd/git-chglog@latest

      - name: Generate release notes
        id: changelog
        run: |
          # Generate release notes for the current tag without modifying files
          CURRENT_TAG=${GITHUB_REF#refs/tags/}
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 $CURRENT_TAG^ 2>/dev/null || echo "")
          
          # Generate changelog content to stdout only
          if [ -z "$PREVIOUS_TAG" ]; then
            # First release - get all commits
            CHANGELOG_CONTENT=$(git-chglog --config .chglog/config.yml "$CURRENT_TAG")
          else
            # Generate changelog for the range
            CHANGELOG_CONTENT=$(git-chglog --config .chglog/config.yml "$PREVIOUS_TAG..$CURRENT_TAG")
          fi
          
          # Extract just the content for the current version (remove the version header)
          RELEASE_NOTES=$(echo "$CHANGELOG_CONTENT" | awk '
            /^## / { if (found) exit; found=1; next }
            found { print }
          ')
          
          # Set as output for GoReleaser
          {
            echo "notes<<EOF"
            echo "$RELEASE_NOTES"
            echo "EOF"
          } >> $GITHUB_OUTPUT

      - name: Run tests
        run: go test -race ./...

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: v2.9.0
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_CURRENT_TAG: ${{ github.ref_name }}
          RELEASE_NOTES: ${{ steps.changelog.outputs.notes }}
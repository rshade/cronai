"use strict";(self.webpackChunkcronai_docs=self.webpackChunkcronai_docs||[]).push([[891],{8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>o});var s=r(6540);const t={},i=s.createContext(t);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(i.Provider,{value:n},e.children)}},9288:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>m});const s=JSON.parse('{"id":"prompt-management","title":"Prompt Management","description":"CronAI includes a simple file-based prompt management system that helps you organize and use prompts efficiently.","source":"@site/docs/prompt-management.md","sourceDirName":".","slug":"/prompt-management","permalink":"/cronai/docs/prompt-management","draft":false,"unlisted":false,"editUrl":"https://github.com/rshade/cronai/tree/main/site-docs/docs/prompt-management.md","tags":[],"version":"current","frontMatter":{"id":"prompt-management","title":"Prompt Management","sidebar_label":"Prompt Management"},"sidebar":"tutorialSidebar","previous":{"title":"systemd Service","permalink":"/cronai/docs/systemd"},"next":{"title":"Model Parameters","permalink":"/cronai/docs/model-parameters"}}');var t=r(4848),i=r(8453);const a={id:"prompt-management",title:"Prompt Management",sidebar_label:"Prompt Management"},o=void 0,l={},m=[{value:"Directory Structure",id:"directory-structure",level:2},{value:"Prompt Files",id:"prompt-files",level:2},{value:"Variables in Prompts",id:"variables-in-prompts",level:2},{value:"CLI Commands",id:"cli-commands",level:2},{value:"List Prompts",id:"list-prompts",level:3},{value:"Search Prompts",id:"search-prompts",level:3},{value:"Show Prompt Details",id:"show-prompt-details",level:3},{value:"Preview Prompt",id:"preview-prompt",level:3},{value:"Using Prompts in CronAI Configuration",id:"using-prompts-in-cronai-configuration",level:2},{value:"Example Prompt Files",id:"example-prompt-files",level:2},{value:"Basic Prompt",id:"basic-prompt",level:3},{value:"Prompt with System Metrics",id:"prompt-with-system-metrics",level:3},{value:"Post-MVP Features",id:"post-mvp-features",level:2}];function p(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"CronAI includes a simple file-based prompt management system that helps you organize and use prompts efficiently."}),"\n",(0,t.jsx)(n.h2,{id:"directory-structure",children:"Directory Structure"}),"\n",(0,t.jsxs)(n.p,{children:["Prompts are stored as markdown files in the ",(0,t.jsx)(n.code,{children:"cron_prompts/"})," directory:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"cron_prompts/\n\u251c\u2500\u2500 README.md           # Documentation for prompt structure\n\u251c\u2500\u2500 monitoring/         # Prompts for monitoring purposes\n\u251c\u2500\u2500 reports/            # Prompts for report generation\n\u251c\u2500\u2500 system/             # Prompts for system operations\n\u2514\u2500\u2500 [other_categories]/ # Custom categories\n"})}),"\n",(0,t.jsx)(n.h2,{id:"prompt-files",children:"Prompt Files"}),"\n",(0,t.jsxs)(n.p,{children:["Prompts are standard markdown files with a ",(0,t.jsx)(n.code,{children:".md"})," extension. During the MVP phase, prompts are simple text files that can contain variables:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-markdown",children:"# System Health Check\n\nAnalyze the following system metrics and provide recommendations:\n\n- CPU Usage: {{cpu_usage}}%\n- Memory Usage: {{memory_usage}}%\n- Disk Usage: {{disk_usage}}%\n\nPlease provide:\n1. Assessment of current system health\n2. Potential issues identified\n3. Recommended actions\n"})}),"\n",(0,t.jsx)(n.h2,{id:"variables-in-prompts",children:"Variables in Prompts"}),"\n",(0,t.jsxs)(n.p,{children:["Variables in prompts use the ",(0,t.jsx)(n.code,{children:"{{variable_name}}"})," syntax. CronAI automatically provides the following special variables:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"{{CURRENT_DATE}}"}),": Current date in YYYY-MM-DD format"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"{{CURRENT_TIME}}"}),": Current time in HH:MM",":SS"," format"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"{{CURRENT_DATETIME}}"}),": Current date and time in YYYY-MM-DD HH:MM",":SS"," format"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Custom variables can be provided in the configuration file or command line using a comma-separated list of key=value pairs."}),"\n",(0,t.jsx)(n.h2,{id:"cli-commands",children:"CLI Commands"}),"\n",(0,t.jsx)(n.p,{children:"CronAI provides several commands to help you manage your prompts:"}),"\n",(0,t.jsx)(n.h3,{id:"list-prompts",children:"List Prompts"}),"\n",(0,t.jsx)(n.p,{children:"List all available prompts, optionally filtered by category:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# List all prompts\ncronai prompt list\n\n# List prompts in a specific category\ncronai prompt list --category system\n"})}),"\n",(0,t.jsx)(n.h3,{id:"search-prompts",children:"Search Prompts"}),"\n",(0,t.jsx)(n.p,{children:"Search for prompts by name or content:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Search by name or description\ncronai prompt search "health check"\n\n# Search in a specific category\ncronai prompt search --query "monitoring" --category system\n\n# Search in prompt content\ncronai prompt search --content --query "CPU usage"\n'})}),"\n",(0,t.jsx)(n.h3,{id:"show-prompt-details",children:"Show Prompt Details"}),"\n",(0,t.jsx)(n.p,{children:"Show detailed information about a specific prompt:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cronai prompt show system/system_health\n"})}),"\n",(0,t.jsx)(n.h3,{id:"preview-prompt",children:"Preview Prompt"}),"\n",(0,t.jsx)(n.p,{children:"Preview a prompt with variables substituted:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'cronai prompt preview system/system_health --vars "cpu_usage=85,memory_usage=70,disk_usage=50"\n'})}),"\n",(0,t.jsx)(n.h2,{id:"using-prompts-in-cronai-configuration",children:"Using Prompts in CronAI Configuration"}),"\n",(0,t.jsx)(n.p,{children:"Reference prompts in your cronai.config file using either the full path or category/name format:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"# Using a prompt from a category\n0 8 * * * openai system/system_health file-/var/log/cronai/health.log\n\n# Using a prompt with variables\n0 9 * * 1 claude reports/weekly_report github-issue:owner/repo date={{CURRENT_DATE}},team=Engineering\n"})}),"\n",(0,t.jsx)(n.h2,{id:"example-prompt-files",children:"Example Prompt Files"}),"\n",(0,t.jsx)(n.h3,{id:"basic-prompt",children:"Basic Prompt"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-markdown",children:"# Daily Status Report\n\nGenerate a daily status report for {{project}} on {{CURRENT_DATE}}.\n\n1. Current status overview\n2. Progress since yesterday\n3. Planned tasks for today\n4. Blocking issues, if any\n"})}),"\n",(0,t.jsx)(n.h3,{id:"prompt-with-system-metrics",children:"Prompt with System Metrics"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-markdown",children:"# System Health Check\n\nCPU Usage: {{cpu_usage}}%\nMemory Usage: {{memory_usage}}%\nDisk Space: {{disk_usage}}%\n\nPlease analyze these metrics and provide:\n1. Current system health assessment\n2. Potential issues or warning signs\n3. Recommended actions\n"})}),"\n",(0,t.jsx)(n.h2,{id:"post-mvp-features",children:"Post-MVP Features"}),"\n",(0,t.jsx)(n.p,{children:"The following prompt management features are planned for future releases:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Prompt metadata (YAML frontmatter)"}),"\n",(0,t.jsx)(n.li,{children:"Template inheritance and composition"}),"\n",(0,t.jsx)(n.li,{children:"Includes for reusing common prompt components"}),"\n",(0,t.jsx)(n.li,{children:"Conditional logic in prompts"}),"\n",(0,t.jsx)(n.li,{children:"Advanced variable validation and defaults"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"For more information on these upcoming features, see the project roadmap."})]})}function c(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}}}]);
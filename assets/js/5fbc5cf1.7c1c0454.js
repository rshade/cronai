"use strict";(self.webpackChunkcronai_docs=self.webpackChunkcronai_docs||[]).push([[624],{8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var i=s(6540);const t={},r=i.createContext(t);function l(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:n},e.children)}},9362:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"api","title":"CronAI API Documentation","description":"Note: This document is a placeholder for future API documentation. The external API is planned for post-MVP releases.","source":"@site/docs/api.md","sourceDirName":".","slug":"/api","permalink":"/cronai/docs/api","draft":false,"unlisted":false,"editUrl":"https://github.com/rshade/cronai/tree/main/site-docs/docs/api.md","tags":[],"version":"current","frontMatter":{"id":"api","title":"CronAI API Documentation","sidebar_label":"API Reference"},"sidebar":"tutorialSidebar","previous":{"title":"Troubleshooting","permalink":"/cronai/docs/troubleshooting"}}');var t=s(4848),r=s(8453);const l={id:"api",title:"CronAI API Documentation",sidebar_label:"API Reference"},o=void 0,d={},a=[{value:"Current Status",id:"current-status",level:2},{value:"Planned API Features",id:"planned-api-features",level:2},{value:"API Design Principles",id:"api-design-principles",level:2},{value:"Planned Endpoints",id:"planned-endpoints",level:2},{value:"Authentication",id:"authentication",level:2},{value:"Status Codes",id:"status-codes",level:2},{value:"Stay Tuned",id:"stay-tuned",level:2}];function c(e){const n={blockquote:"blockquote",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note"}),": This document is a placeholder for future API documentation. The external API is planned for post-MVP releases."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This document will describe the API endpoints, request/response formats, and authentication mechanisms for CronAI's external API."}),"\n",(0,t.jsx)(n.h2,{id:"current-status",children:"Current Status"}),"\n",(0,t.jsx)(n.p,{children:"The external API is currently in development and planned for post-MVP releases. The MVP version does not include external API access."}),"\n",(0,t.jsx)(n.h2,{id:"planned-api-features",children:"Planned API Features"}),"\n",(0,t.jsx)(n.p,{children:"The following API features are planned for future releases:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Task Management API"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Create, read, update, and delete scheduled tasks"}),"\n",(0,t.jsx)(n.li,{children:"Control task execution (start, stop, pause)"}),"\n",(0,t.jsx)(n.li,{children:"Query task execution history and status"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Prompt Management API"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Create, read, update, and delete prompts"}),"\n",(0,t.jsx)(n.li,{children:"Organize prompts into categories"}),"\n",(0,t.jsx)(n.li,{children:"Test prompts with variables"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Model Management API"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Configure model parameters"}),"\n",(0,t.jsx)(n.li,{children:"View model usage and statistics"}),"\n",(0,t.jsx)(n.li,{children:"Test model execution"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Response Processing API"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Configure response processors"}),"\n",(0,t.jsx)(n.li,{children:"View response history"}),"\n",(0,t.jsx)(n.li,{children:"Query processed outputs"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"api-design-principles",children:"API Design Principles"}),"\n",(0,t.jsx)(n.p,{children:"The future API will follow these design principles:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"RESTful architecture"}),"\n",(0,t.jsx)(n.li,{children:"JSON request/response format"}),"\n",(0,t.jsx)(n.li,{children:"Token-based authentication"}),"\n",(0,t.jsx)(n.li,{children:"Comprehensive error responses"}),"\n",(0,t.jsx)(n.li,{children:"Versioned endpoints"}),"\n",(0,t.jsx)(n.li,{children:"Rate limiting"}),"\n",(0,t.jsx)(n.li,{children:"Pagination for list endpoints"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"planned-endpoints",children:"Planned Endpoints"}),"\n",(0,t.jsx)(n.p,{children:"A preview of planned endpoints:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-http",children:"# Task Management\nGET    /api/v1/tasks\nPOST   /api/v1/tasks\nGET    /api/v1/tasks/:id\nPUT    /api/v1/tasks/:id\nDELETE /api/v1/tasks/:id\nPOST   /api/v1/tasks/:id/execute\n\n# Prompt Management\nGET    /api/v1/prompts\nPOST   /api/v1/prompts\nGET    /api/v1/prompts/:id\nPUT    /api/v1/prompts/:id\nDELETE /api/v1/prompts/:id\nPOST   /api/v1/prompts/:id/test\n\n# Model Management\nGET    /api/v1/models\nGET    /api/v1/models/:id/config\nPUT    /api/v1/models/:id/config\nPOST   /api/v1/models/:id/test\n\n# Response Processing\nGET    /api/v1/processors\nGET    /api/v1/processors/:type/config\nPUT    /api/v1/processors/:type/config\nGET    /api/v1/responses\nGET    /api/v1/responses/:id\n"})}),"\n",(0,t.jsx)(n.h2,{id:"authentication",children:"Authentication"}),"\n",(0,t.jsx)(n.p,{children:"Future API authentication will likely use:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Bearer token authentication"}),"\n",(0,t.jsx)(n.li,{children:"OAuth 2.0 integration (for third-party applications)"}),"\n",(0,t.jsx)(n.li,{children:"Role-based access control"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"status-codes",children:"Status Codes"}),"\n",(0,t.jsx)(n.p,{children:"The API will use standard HTTP status codes:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"200 OK"}),": Successful request"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"201 Created"}),": Resource created successfully"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"400 Bad Request"}),": Invalid request parameters"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"401 Unauthorized"}),": Missing or invalid authentication"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"403 Forbidden"}),": Insufficient permissions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"404 Not Found"}),": Resource not found"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"500 Internal Server Error"}),": Server-side error"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"stay-tuned",children:"Stay Tuned"}),"\n",(0,t.jsx)(n.p,{children:"The API documentation will be expanded as the external API is implemented. Check back in future releases for comprehensive API documentation."})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);
"use strict";(self.webpackChunkcronai_docs=self.webpackChunkcronai_docs||[]).push([[174],{7106:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"systemd","title":"Running CronAI as a systemd Service","description":"This document explains how to set up CronAI to run as a systemd service on Linux systems.","source":"@site/docs/systemd.md","sourceDirName":".","slug":"/systemd","permalink":"/cronai/docs/systemd","draft":false,"unlisted":false,"editUrl":"https://github.com/rshade/cronai/tree/main/site-docs/docs/systemd.md","tags":[],"version":"current","frontMatter":{"id":"systemd","title":"Running CronAI as a systemd Service","sidebar_label":"systemd Service"},"sidebar":"tutorialSidebar","previous":{"title":"Architecture","permalink":"/cronai/docs/architecture"},"next":{"title":"Prompt Management","permalink":"/cronai/docs/prompt-management"}}');var i=s(4848),r=s(8453);const c={id:"systemd",title:"Running CronAI as a systemd Service",sidebar_label:"systemd Service"},a=void 0,o={},l=[{value:"Setup Steps",id:"setup-steps",level:2},{value:"1. Build and install the CronAI binary",id:"1-build-and-install-the-cronai-binary",level:3},{value:"2. Create your configuration and prompt files",id:"2-create-your-configuration-and-prompt-files",level:3},{value:"3. Set up your environment file",id:"3-set-up-your-environment-file",level:3},{value:"4. Create the systemd service file",id:"4-create-the-systemd-service-file",level:3},{value:"5. Enable and start the service",id:"5-enable-and-start-the-service",level:3},{value:"6. Check the service status",id:"6-check-the-service-status",level:3},{value:"7. View the logs",id:"7-view-the-logs",level:3},{value:"Managing the Service",id:"managing-the-service",level:2},{value:"Restart the service",id:"restart-the-service",level:3},{value:"Stop the service",id:"stop-the-service",level:3},{value:"Disable the service (prevents it from starting at boot)",id:"disable-the-service-prevents-it-from-starting-at-boot",level:3}];function d(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"This document explains how to set up CronAI to run as a systemd service on Linux systems."}),"\n",(0,i.jsx)(n.h2,{id:"setup-steps",children:"Setup Steps"}),"\n",(0,i.jsx)(n.h3,{id:"1-build-and-install-the-cronai-binary",children:"1. Build and install the CronAI binary"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd /path/to/cronai\ngo build -o cronai ./cmd/cronai\nsudo cp cronai /usr/local/bin/cronai\n"})}),"\n",(0,i.jsx)(n.h3,{id:"2-create-your-configuration-and-prompt-files",children:"2. Create your configuration and prompt files"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"mkdir -p /etc/cronai/cron_prompts\ncp cronai.config.example /etc/cronai/cronai.config\ncp -r cron_prompts/* /etc/cronai/cron_prompts/\n"})}),"\n",(0,i.jsx)(n.h3,{id:"3-set-up-your-environment-file",children:"3. Set up your environment file"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cp .env.example /etc/cronai/.env\n# Edit the .env file with your API keys and settings\nsudo nano /etc/cronai/.env\n"})}),"\n",(0,i.jsx)(n.h3,{id:"4-create-the-systemd-service-file",children:"4. Create the systemd service file"}),"\n",(0,i.jsx)(n.p,{children:"Copy the example service file and modify it for your system:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo cp cronai.service /etc/systemd/system/cronai.service\nsudo nano /etc/systemd/system/cronai.service\n"})}),"\n",(0,i.jsx)(n.p,{children:"Update the following fields in the service file:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"User"}),": The user account that will run the service"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"WorkingDirectory"}),": The directory where your configuration is located (e.g., ",(0,i.jsx)(n.code,{children:"/etc/cronai"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ExecStart"}),": The path to the CronAI binary (e.g., ",(0,i.jsx)(n.code,{children:"/usr/local/bin/cronai start --config /etc/cronai/cronai.config"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"EnvironmentFile"}),": The path to your .env file (e.g., ",(0,i.jsx)(n.code,{children:"/etc/cronai/.env"}),")"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"5-enable-and-start-the-service",children:"5. Enable and start the service"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl daemon-reload\nsudo systemctl enable cronai\nsudo systemctl start cronai\n"})}),"\n",(0,i.jsx)(n.h3,{id:"6-check-the-service-status",children:"6. Check the service status"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl status cronai\n"})}),"\n",(0,i.jsx)(n.h3,{id:"7-view-the-logs",children:"7. View the logs"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo journalctl -u cronai -f\n"})}),"\n",(0,i.jsx)(n.h2,{id:"managing-the-service",children:"Managing the Service"}),"\n",(0,i.jsx)(n.h3,{id:"restart-the-service",children:"Restart the service"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl restart cronai\n"})}),"\n",(0,i.jsx)(n.h3,{id:"stop-the-service",children:"Stop the service"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl stop cronai\n"})}),"\n",(0,i.jsx)(n.h3,{id:"disable-the-service-prevents-it-from-starting-at-boot",children:"Disable the service (prevents it from starting at boot)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl disable cronai\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>a});var t=s(6540);const i={},r=t.createContext(i);function c(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);